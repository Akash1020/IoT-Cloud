version: '3'
services:
  db:
    volumes:
      - data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - 5431:5432
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      TESTING_DB_NAME: "testing"
      POSTGRES_DB: postgres
  web:
    working_dir: /app
    volumes:
      - ./app:/app

    environment:
      - DOCKER_TLS_VERIFY=True
      - COMPOSE_TLS_VERSION=TLSv1_2
      - PYTHONDONTWRITEBYTECODE=False
      - FLASK_ENV=docker
      - FLASK_DEBUG=1
      - FLASK_APP=app.app_setup:create_app('development')
    command: bash -c "while ping -c1 web_test &>/dev/null; do sleep 1; done && flask run --host=0.0.0.0 --port=443 --no-reload"
    depends_on:
      - db
      - web_test
  mqtt:
    restart: always
    ports:
    - "8883:8883"
    - "9001:9001"
    environment:
    - DOCKER_TLS_VERIFY=True
    - COMPOSE_TLS_VERSION=TLSv1_2
    volumes:
    - ./mosquitto/config:/mosquitto/config
    - ./mosquitto/data:/mosquitto/data
    - ./mosquitto/log:/mosquitto/log
    - ./mosquitto/certs:/mosquitto/certs
  nginx:
    ports:
    - "443:443"
    volumes:
    - ./webserver/conf.d:/etc/nginx/conf.d
    - ./webserver/ssl/:/etc/ssl/
    depends_on:
    - web
  web_test:
    working_dir: /app
    volumes:
    - ./app:/app
    - ./client:/client
    - './tests:/tests'
    - /tests/test_client/
    user: ${CURRENT_UID}
    environment:
    - DOCKER_TLS_VERIFY=True
    - COMPOSE_TLS_VERSION=TLSv1_2
    - PYTHONDONTWRITEBYTECODE=False
    command: pytest ../tests --color=yes --junitxml=/tests/reports/test_report.xml --cov=/app --cov-report term --cov-report xml:/tests/reports/cov_report.xml

volumes:
  data: {}